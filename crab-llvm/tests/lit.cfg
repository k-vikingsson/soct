# -*- Python -*-
import os
import sys
import re
import platform

try:
   import lit.util
   import lit.formats
except ImportError:
   pass

config.name = 'CrabLlvm'

config.test_format = lit.formats.ShTest(execute_external=False)
config.suffixes = ['.c']

config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = lit_config.params.get('test_dir', '.')

def addEnv(name):
   if name in os.environ:
      config.environment[name] = os.environ[name]

def isexec (fpath):
    if fpath == None: return False
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

def which(program):
   if isinstance (program, str): 
      choices = [program]
   else:
      choices = program
   for p in choices:
      fpath, fname = os.path.split(p)
      if fpath:
         if isexec (p): return p
      else:
         for path in os.environ["PATH"].split(os.pathsep):
            exe_file = os.path.join(path, p)
            if isexec (exe_file):
               return exe_file
   return None

def getCrabllvm ():
   crabllvm = None
   if 'CRABLLVM' in os.environ and os.path.isdir(os.environ ['CRABLLVM']):
      crabllvm = os.path.join(os.environ ['CRABLLVM'],'crabllvm.py')
   if not isexec (crabllvm):
      crabllvm = os.path.join (repositoryRoot, 'build', 'run', 'bin', 'crabllvm.py')
   if not isexec (crabllvm): 
      crabllvm = which ('crabllvm.py')
   return crabllvm

addEnv('HOME')
addEnv('PWD')
addEnv('C_INCLUDE_PATH')

repositoryRoot = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
lit_config.note('Repository root is {}'.format(repositoryRoot))

lit_config.note('Found clang: {}'.format(which('clang')))

crabllvm_cmd = getCrabllvm()
if not isexec(crabllvm_cmd):
   lit_config.fatal('Could not find the crab-llvm executable')
else:
   lit_config.note('Found crabllvm.py: {}'.format(crabllvm_cmd))

config.substitutions.append(('%crabllvm', crabllvm_cmd))

llvm_dis_cmd = which('llvm-dis')
if llvm_dis_cmd is None:
   lit_config.fatal('Could not find llvm-dis')
else:
   lit_config.note('Found llvm-dis: {}'.format(llvm_dis_cmd))

config.substitutions.append(('%llvm_dis', llvm_dis_cmd))
